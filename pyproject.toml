# ===== TOOL ==============================================================
#

# ----- codespell ---------------------------------------------------------
[tool.codespell]
builtin = 'clear,rare,informal,usage,names'
skip = './bertalign.egg-info,./build,./docs/api,./docs/_templates'

# ----- ruff --------------------------------------------------------------
#
[tool.ruff]
select = [
    'D',     # pydocstyle
    'E',     # pycodestyle errors
    'F',     # Pyflakes
    'I',     # isort
    'N',     # pep8-naming
    'W',     # pycodestyle warnings
]

extend-ignore = [
    'D100',  # Missing docstring in public module
    'D103',  # Missing docstring in public function
    'D104',  # Missing docstring in public package
    'D107',  # Missing docstring in `__init__`
    'E741',  # Allow variables named 'I'
    'N806',  # Allow upper case variable names (matrices)
]

# same as black
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

cache-dir = '.cache/ruff'

[tool.ruff.per-file-ignores]
'__init__.py' = [
    'F401',  # * imported but unused
]


[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.format]
# Prefer single quotes over double quotes.
quote-style = "double"


# ----- I: isort -----
#
# Check correct order/syntax of import statements
#
[tool.ruff.isort]

# All from imports have their own line, e.g.
#
#   from .utils import util_a
#   from .utils import util_b
#
force-single-line = true

# Sort by module names
# and not import before from, e.g.
#
#     from datetime import date
#     import os
#
force-sort-within-sections = true

# Ensure we have two empty lines
# after last import
lines-after-imports = 2

section-order = [
    'future',
    'standard-library',
    'third-party',
    'first-party',
    'local-folder',
]

# ----- N: pep8-naming -----
#
# Check variable/class names follow PEP8 naming convention
#
[tool.ruff.pep8-naming]
ignore-names = [
    'config',  # allow lowercase class name
    'test_*',  # allow uppercase name when testing a class
]


# ----- W: pycodestyle -----
#
# Check docstrings follow selected convention
#
[tool.ruff.pydocstyle]
convention = 'google'


# ----- pytest ------------------------------------------------------------
#
[tool.pytest.ini_options]
addopts = '''
    --cov=bertalign
    --cov-fail-under=50
    --cov-report term
    --doctest-plus
'''

# ----- setuptools --------------------------------------------------------
#
# Find all (sub-)modules of the Python package
[tool.setuptools.packages.find]

# ----- setuptools_scm ----------------------------------------------------
#
# Use setuptools_scm to get version from git
[tool.setuptools_scm]
